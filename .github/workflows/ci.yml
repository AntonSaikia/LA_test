name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: language_app
        ports:
          - 3306:3306
        # Health check to ensure MySQL is ready for connections
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent" --health-interval=10s --health-timeout=5s --health-retries=10 # Increased retries

      php:
        image: php:8.2-fpm-alpine # Using alpine for smaller image
        volumes:
          - ./backend:/var/www/html/backend
          - ./frontend:/var/www/html/frontend
        ports:
          - 9000:9000
        environment:
          DB_HOST: mysql # IMPORTANT: Connects to the 'mysql' service by its name
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: language_app
        depends-on:
          mysql:
            condition: service_healthy # Ensure MySQL is healthy before starting PHP

      nginx:
        image: nginx:latest
        ports:
          - 80:80
        volumes:
          - ./frontend:/var/www/html/frontend
          - ./backend:/var/www/html/backend
          - ./nginx.conf:/etc/nginx/conf.d/default.conf # Mount your custom Nginx config
        depends-on:
          php:
            condition: service_started # Nginx just needs PHP-FPM to be running

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Database Seeding ---
      # This step needs to run AFTER the 'mysql' service is confirmed healthy.
      # We target the actual service container running in GitHub Actions.
      - name: Wait for MySQL and Seed Database
        run: |
          echo "Waiting for MySQL service to be fully up and ready for connections..."
          # Use 'nc' to wait for the MySQL port to be open on the 'mysql' service host
          for i in $(seq 1 30); do
            nc -z mysql 3306 && echo "MySQL is up!" && break
            echo -n "."
            sleep 1
          done
          echo "" # Newline after dots

          # GitHub Actions service containers are typically